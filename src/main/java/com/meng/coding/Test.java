package com.meng.coding;

import java.util.*;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.stream.Collectors;

public class Test {

    //

    private static List<String> list = new ArrayList<>();
    private static List<String> usedMobiles = new ArrayList<>();
    public static void main(String[] args) {

        System.out.println(Math.abs("17644027270".hashCode())%32 + 1);//1020555
        System.out.println(Math.abs("17644023230".hashCode())%32 + 1);//1001033779
        System.out.println(Math.abs("E510000000025734996".hashCode())%32 + 1);
        System.out.println(Math.abs("C0000000000004496205".hashCode())%32 + 1);
//        System.out.println(1077857118%32 + 1);
        System.out.println(1020555%32 + 1);
        System.out.println(1001033779%32 + 1);

        //校验数据结果没问题
//        System.out.println(list.stream().map(item -> {
//            String[] items = item.split(",");
//            A a = new A();
//            a.setId(Long.parseLong(items[0]));
//            a.setMobile(items[1]);
//            a.setMember(items[2]);
//            return a;
//        }).collect(Collectors.groupingBy(A::getMember)).values().stream().filter(item -> item.size() == 1).findAny().isPresent());
        //id分组
//        mxinfo(1);
//        System.out.println("----------");
//        mxinfo(0);
//        System.out.println("----------");
        List<Integer> list = new ArrayList<>();
        list.add(1);
        list.add(2);
        list.add(3);
        list.add(4);
        list.add(9);
        list.add(10);
        list.add(11);
        list.add(12);
        list.add(17);
        list.add(18);
        list.add(19);
        list.add(20);
        list.add(25);
        list.add(26);
        list.add(27);
        list.add(28);
//        cmcmobileinfo(list);
//        cmcInfo(list);
        System.out.println("---------------------------");
        list.clear();
        list.add(5);
        list.add(6);
        list.add(7);
        list.add(8);
        list.add(13);
        list.add(14);
        list.add(15);
        list.add(16);
        list.add(21);
        list.add(22);
        list.add(23);
        list.add(24);
        list.add(29);
        list.add(30);
        list.add(31);
        list.add(32);
//        cmcmobileinfo(list);
//        cmcInfo(list);

//        checkWeird();
    }

    private static void checkWeird() {
        AtomicInteger total = new AtomicInteger(0);
        usedMobiles.stream().map(item ->{
            A a = new A();
            String[] items = item.split(",");
            a.setMember(items[0]);
            a.setMobile(items[1]);
            a.setUsedMobiles(items[2]);
            return a;
        }).collect(Collectors.groupingBy(A::getMobile)).forEach((key,value) ->{
            AtomicBoolean isHave = new AtomicBoolean(false);
            value.forEach(item ->{
                if(item.getUsedMobiles().equals(key)){
                    isHave.set(true);
                }
            });
            if(!isHave.get()){
                total.incrementAndGet();
                System.out.print(key + ",");
            }
        });
        System.out.println();
        System.out.println(total.intValue());
    }

    private static void cmcInfo(List<Integer> shards) {
        list.stream().map(item -> {
            String[] items = item.split(",");
            A a = new A();
            a.setId(Long.parseLong(items[0]));
            a.setMobile(items[1]);
            a.setMember(items[2]);
            return a;
        }).forEach(item -> {
            if(shards.contains(item.getShardCMC())){
                System.out.println("select t.member_no, t.mobile, usermobile,counts from cmc_member_shard_" + getShard(item.getShardCMC()) +
                        ".t_member_info t, " +
                        "(select mobile usermobile, count(1) counts  from  cmc_member_shard_" + getShard(item.getShardCMC()) +".t_login_log where member_no  = '" + item.getMember() + "' group by mobile order by counts ) a " +
                        "where  t.member_no = '" + item.getMember() + "' union ");
//                System.out.println("select member_no, mobile from cmc_member_shard_" + getShard(item.getShardCMC()) + ".t_member_info where " +
//                        "member_no='" + item.getMember() + "' union all");
            }
        });
    }

    private static void cmcmobileinfo(List<Integer> shards) {
        list.stream().map(item -> {
            String[] items = item.split(",");
            A a = new A();
            a.setId(Long.parseLong(items[0]));
            a.setMobile(items[1]);
            a.setMember(items[2]);
            return a;
        }).forEach(item -> {
            if(shards.contains(item.getShardMobile())){
                System.out.println("select * from cmc_member_shard_" + getShard(item.getShardMobile()) + ".mobile_member_map where " +
                        "mobile='" + item.getMobile() + "' and member_no = '" + item.getMember()+ "' union all");
            }
        });
    }

    public static void mxinfo(int jiou){
        list.stream().map(item -> {
            String[] items = item.split(",");
            A a = new A();
            a.setId(Long.parseLong(items[0]));
            a.setMobile(items[1]);
            a.setMember(items[2]);
            return a;
        }).filter(item -> item.getShard()%2 == jiou).collect(Collectors.groupingBy(A::getShard)).values().forEach(item ->{
            String collect = item.stream().map(itemi -> itemi.getId().toString()).collect(Collectors.joining(","));
            System.out.println("select a.id , a.mobile, subject_user from mx_user_auth_shard_" + getShard(item.get(0).getShard())
                    +".userauthinfo a left join mx_user_auth_shard_" + getShard(item.get(0).getShard()) + ".usersubjectinfo " +
                    "on user_id = a.id where user_id in ("
                    + collect +
                    ")  union all ");
        });
    }


    public static String getShard(int shard){
        if(shard <1 || shard > 32){
            throw new RuntimeException("shard :" + shard);
        }
        return shard < 10 ? String.valueOf("0" + shard) : String.valueOf(shard);
    }
    static {
        list.add("400192,15078341585,E510000000026258367");
        list.add("810240,18118991220,C1240000000086293462");
        list.add("3315008,18698719068,C8850000000065086281");
        list.add("1001578432,18253385335,C3040000000032666908");
        list.add("1002212864,18751587672,C1210000000058774214");
        list.add("1005111392,13969676666,C1510000000069670920");
        list.add("1008997600,15141716501,C1490000000069787312");
        list.add("1012834720,13418046562,C0000000000004615066");
        list.add("1013992672,13940939494,C3200000000032450114");
        list.add("1046983648,17110238358,E277000000178953584");
        list.add("1105256480,18663817856,C3110000000035483372");
        list.add("1206850,13591369551,C3200000000032450114");
        list.add("2344098,13348432276,C9620000000085724250");
        list.add("1000054946,18686849590,C0000000000004040554");
        list.add("1000557058,13567479797,C3270000000007611455");
        list.add("1001542274,18504118752,C9620000000074661493");
        list.add("1003059234,13185262256,C3700000000093197746");
        list.add("1006722690,18686639092,C0000000000004471595");
        list.add("1043534466,18045419639,C1490000000054115189");
        list.add("1050651970,15208299396,C8490000000041358350");
        list.add("1432004,13100815565,C8620000000094424941");
        list.add("2042660,18650396401,C8220000000081800951");
        list.add("2248868,17191586749,C1270000000065181720");
        list.add("2710948,17561726335,C9620000000082252052");
        list.add("1000120548,13061057910,E510000000140616615");
        list.add("1002057060,13903218050,C3700000000032054143");
        list.add("1002739140,13416910018,C8490000000037055763");
        list.add("1059745668,15842391115,C8490000000021860714");
        list.add("3342598,18288680895,C3040000000037297335");
        list.add("1000049574,15277031449,C3040000000078315301");
        list.add("1000228582,18766216053,C0000000000001035982");
        list.add("1000283494,13843610003,C3330000000015827466");
        list.add("1000297382,18650988993,C3700000000075644897");
        list.add("1000347462,18568806337,C9880000000066895643");
        list.add("1000724262,13532739442,C9620000000082132119");
        list.add("1003503494,13512666166,C10250000000050430987");
        list.add("1004507750,13190153014,C1010000000065279228");
        list.add("1005413734,18347525588,C8420000000025708927");
        list.add("1017764678,13314313276,C10150000000050340496");
        list.add("1024365446,13962985103,C9710000000058502339");
        list.add("1047005862,18645272476,E277000000178970276");
        list.add("1084892070,18653136563,C0000000000001497769");
        list.add("1078952,15940889481,C8700000000083928247");
        list.add("3417992,17136450053,C3810000000075201006");
        list.add("1000044104,15673759990,C3110000000045836198");
        list.add("1000168456,13013087570,C3110000000029597694");
        list.add("1000275304,18908992388,C3330000000031537961");
        list.add("1000295528,18146140396,C8230000000037593136");
        list.add("1006524168,15003468706,C3040000000048675988");
        list.add("1008395048,15883895381,C9870000000077122586");
        list.add("1009550984,15574988987,C3800000000009314226");
        list.add("1011180968,13857507532,E160000000141515912");
        list.add("1014621896,17693132893,C3040000000040313819");
        list.add("1017147368,13836960602,C3830000000035595462");
        list.add("1050572968,13962627170,C1480000000067331618");
        list.add("1058489128,13029904193,E502000000184438415");
        list.add("1001093226,18669061208,C3040000000037297335");
        list.add("1033246698,17125684435,E023000000171815426");
        list.add("1033772714,15566869954,C8420000000018011305");
        list.add("1072312234,13665309158,C8770000000031779814");
        list.add("1083286986,18683862860,C9870000000077122586");
        list.add("922828,17086017467,C3040000000077638286");
        list.add("1859180,15260100870,C9620000000081765559");
        list.add("2043884,18588568333,C8550000000086453527");
        list.add("1000375436,18659776020,C3840000000014244280");
        list.add("1000378348,18500401547,C3330000000025661179");
        list.add("1002234284,18673270844,C3810000000066570894");
        list.add("1003423244,13601616905,C3040000000081234592");
        list.add("1048754092,15291368075,C3110000000021268005");
        list.add("1053272268,17110233538,E502000000182271485");
        list.add("1082441740,17107341149,E002000000149715972");
        list.add("1103657132,17136098461,E118000000172630654");
        list.add("3378926,18659220008,C0000000000004513787");
        list.add("1000088654,13617541845,C3290000000006635818");
        list.add("1000282478,18814663969,C3700000000049462167");
        list.add("1000576878,18521051636,C3110000000018422580");
        list.add("1001541614,13238402691,C3040000000018367972");
        list.add("1002218350,17843176555,C0000000000005557667");
        list.add("1002993070,15822803356,C8490000000013332990");
        list.add("1009520974,18673248769,C9300000000078807603");
        list.add("1015701806,13978042200,C3700000000081806155");
        list.add("1208368,17096429016,C3700000000084984799");
        list.add("2145456,18521795001,C3360000000092706326");
        list.add("2487792,18077209393,C3700000000081806155");
        list.add("3370480,15661556060,C3330000000078013481");
        list.add("1000049520,15296582449,C3040000000078315301");
        list.add("1002727696,18160988816,C8230000000010312418");
        list.add("1007810672,15977489275,C3230000000069769210");
        list.add("1018217328,18601158831,C3330000000029795927");
        list.add("1018608912,18624399572,C9620000000074661493");
        list.add("1028202864,15602352024,C8490000000081701839");
        list.add("915922,13456339015,C3040000000045630373");
        list.add("1546130,13647552435,C0000000000000846038");
        list.add("3077394,18428057867,C1240000000086342097");
        list.add("1000229074,15695160242,C8730000000017882536");
        list.add("1013487762,18962411139,C0000000000006210681");
        list.add("1027225682,18378301124,C9350000000049326828");
        list.add("1043534610,13803654043,C1490000000054115189");
        list.add("1063960562,13635193866,E510000000026258367");
        list.add("1103723922,17133320648,E023000000171815426");
        list.add("920884,17186417035,C9660000000064048349");
        list.add("1631860,13284151501,C1240000000094640268");
        list.add("2866996,18654619162,E510000000025618571");
        list.add("3361972,17896389111,C9680000000073623685");
        list.add("3385076,17170679471,C8220000000081800951");
        list.add("3402868,18198912464,C0000000000000882824");
        list.add("1001011796,15150651905,C8490000000020868678");
        list.add("1003336756,17182724146,E002000000149715972");
        list.add("1006564212,15566868907,C0000000000001686296");
        list.add("1009856660,18698660661,C8420000000068905996");
        list.add("1034832276,18586526921,E510000000140560695");
        list.add("1063369204,15998579153,C0000000000005828278");
        list.add("1064492180,15283807699,C8530000000010370450");
        list.add("1069810484,18688603960,C9060000000041102861");
        list.add("1070025204,17077631329,E502000000182271485");
        list.add("3330678,13451478636,C3040000000077638286");
        list.add("3417334,17739625515,C8810000000068299666");
        list.add("1000168502,18019551953,C3110000000029597694");
        list.add("1001178486,13377137007,C3110000000010263368");
        list.add("1002750294,18205541257,C8750000000038821251");
        list.add("1004090646,18559705789,C9050000000036593798");
        list.add("1005728278,13856440106,C10280000000054547881");
        list.add("1006704342,13785686749,C3810000000010685777");
        list.add("1011882198,13564467364,C3110000000018422580");
        list.add("1024445110,13091931748,C8490000000077004798");
        list.add("1066588758,13942047462,C8700000000067727927");
        list.add("2379832,15627601680,C8490000000081701839");
        list.add("1000043128,18610609969,C3840000000008045034");
        list.add("1000045752,13123516986,C3040000000020798344");
        list.add("1001017592,15245234800,C3700000000049462167");
        list.add("1013073688,18159739007,C9620000000084046812");
        list.add("1105170584,18843196868,C3110000000026282599");
        list.add("199066,18795477070,E510000000140011930");
        list.add("504410,17505982585,C2360000000096521136");
        list.add("818970,17186418574,C1050000000064089223");
        list.add("3305978,19951571340,C1480000000067331618");
        list.add("3366426,19959886570,C8230000000037593136");
        list.add("1004694074,15165367717,C3330000000048329603");
        list.add("1005057114,15104751352,C8420000000013014157");
        list.add("1008084730,17688894758,C1240000000080384733");
        list.add("1027083610,13664250881,C0000000000004978875");
        list.add("1041750330,13113383041,C8490000000040366284");
        list.add("1064240378,13667376227,C0000000000006114507");
        list.add("1850076,18996355503,E943000000026243183");
        list.add("2773852,15942481852,C0000000000005828278");
        list.add("3081756,13950105671,C2360000000096005892");
        list.add("1000648316,18644075056,C3040000000041827970");
        list.add("1001969692,18678043422,C3520000000011524947");
        list.add("1006551644,13561039299,C0000000000006229801");
        list.add("1007726492,13205470333,C10220000000051309198");
        list.add("1103516924,15248159852,C0000000000004059306");
        list.add("198366,18550020600,E510000000140595967");
        list.add("298814,15268356341,C3040000000045630373");
        list.add("2775870,13956021471,E510000000140725820");
        list.add("3344894,17097352240,C1160000000056764946");
        list.add("1000093278,15959255211,C0000000000004513787");
        list.add("1004803742,13313298180,C3110000000032861015");
        list.add("1005864478,13841960158,E510000000140471213");
        list.add("1025831134,15940250488,C1240000000080761923");
        list.add("1033751390,15114662915,C3320000000006683824");
        list.add("1037440798,13801406035,C3680000000007872007");
        list.add("1038273438,17719498294,E381000000174173743");
        list.add("1061918590,13004779484,E277000000178953584");
        list.add("1062155742,17077485218,E970000000172698277");
        list.add("1067323870,18516232518,C3700000000015744704");
        list.add("1077857118,17167282889,E843000000182559819");
        list.add("92053,17092067949,C3700000000093197746");
        list.add("142827,18815692717,C8650000000015657189");
        list.add("298963,17071471647,C9660000000064048349");
        list.add("459977,15959686975,C9620000000084046812");
        list.add("503841,18357507538,E160000000141515912");
        list.add("637371,18949661236,C8750000000038821251");
        list.add("819883,18976444073,C0000000000000846038");
        list.add("1010889,15678720454,C3700000000023419974");
        list.add("1011917,13081772652,E510000000140471213");
        list.add("1020555,17644027270,E510000000025734996");
        list.add("1050573,15756441167,C8490000000081849099");
        list.add("1131187,13913867226,C1280000000064626773");
        list.add("1224731,15989714597,C1270000000065181720");
        list.add("1332241,18637783859,E510000000140039032");
        list.add("1430671,13979104626,C8190000000084076850");
        list.add("1430905,15607792350,E510000000026163597");
        list.add("1436741,18579111173,C3040000000096270467");
        list.add("1540049,15817624544,C3700000000023419974");
        list.add("1655833,18078153379,C3040000000081234592");
        list.add("1843225,17010241994,C3040000000020798344");
        list.add("1953947,13915636352,E510000000140869032");
        list.add("1987989,17688816760,C9620000000082132119");
        list.add("2152749,15948374366,C3330000000095336571");
        list.add("2248741,18015636464,E510000000140609802");
        list.add("2352759,17509076468,E510000000025562973");
        list.add("2360547,15117000000,E510000000140616615");
        list.add("2467145,18212318910,E510000000140560695");
        list.add("2473059,18052066195,C1280000000064626773");
        list.add("2501671,18030088800,C3110000000082468870");
        list.add("2514021,13876682656,C8490000000082793568");
        list.add("2669315,15941936682,E510000000026844528");
        list.add("3077193,15663777859,C3010000000094980317");
        list.add("3184319,15015166536,C1050000000064089223");
        list.add("3187393,13699196625,C3040000000035390360");
        list.add("3289195,13646152012,C8210000000096713691");
        list.add("3298857,17744810844,C0000000000001296638");
        list.add("3301059,18804314000,C3040000000026498779");
        list.add("3305177,18302425256,C1490000000069787312");
        list.add("3316643,13327917021,C8490000000020868678");
        list.add("3318387,18899733775,C8250000000040225530");
        list.add("3328933,17136458036,C3810000000066570894");
        list.add("3340141,17010241984,C3840000000008045034");
        list.add("3340711,18304336896,C3110000000022929821");
        list.add("3345707,15668619084,C8700000000067727927");
        list.add("3353057,17136450393,C1460000000067579663");
        list.add("3358745,15777324888,C3040000000041827970");
        list.add("3367571,18670916873,C3810000000075201006");
        list.add("3368317,18853605128,C1000000000057928194");
        list.add("3370043,17773225344,C9300000000078807603");
        list.add("3380509,18165309380,C3150000000020439767");
        list.add("3399113,13586972812,C8490000000077004798");
        list.add("3405665,18507501003,C9060000000041102861");
        list.add("3409639,15842690064,C0000000000004978875");
        list.add("3410879,17673050866,C3800000000009314226");
        list.add("3412275,13397229000,C8490000000025815296");
        list.add("1000005117,18530181885,C3040000000035390360");
        list.add("1000014219,18518183131,C3330000000029795927");
        list.add("1000188169,17642198731,C3040000000079656746");
        list.add("1000225301,17784670001,C3290000000006635818");
        list.add("1000225503,15114042067,C8490000000081849099");
        list.add("1000231109,13257705716,C3700000000084984799");
        list.add("1000300145,18661387516,E510000000025618571");
        list.add("1000328911,18063053768,C10280000000054547881");
        list.add("1000351535,18692467717,C3110000000045836198");
        list.add("1000375659,17369538079,C9620000000079522906");
        list.add("1000376881,15159180085,C3700000000075644897");
        list.add("1000405437,18906022422,C3110000000082468870");
        list.add("1000426953,13104314060,C10150000000050340496");
        list.add("1000570215,13337649658,C0000000000001848757");
        list.add("1000614485,17504409480,C1070000000056369590");
        list.add("1000774409,18275730024,C1250000000076333648");
        list.add("1000778069,18170882684,C9600000000051886281");
        list.add("1000937851,18847303535,C0000000000004059306");
        list.add("1001033779,17644023230,E510000000025734996");
        list.add("1001077085,15568828423,C0000000000004471595");
        list.add("1001177241,13685832222,C3270000000007611455");
        list.add("1001433325,18595141582,C3040000000038766591");
        list.add("1001440207,17679103657,C1240000000076364353");
        list.add("1001525391,18191365925,C3110000000021268005");
        list.add("1001535407,13532655877,C8490000000037055763");
        list.add("1001590425,18013171482,C3390000000006881942");
        list.add("1001627229,15641106153,C1010000000065279228");
        list.add("1001647771,17605074047,C2360000000096005892");
        list.add("1001672255,18640473852,C0000000000005016468");
        list.add("1001721183,17382305360,E943000000026243183");
        list.add("1001773175,18669855359,C0000000000001035982");
        list.add("1001788211,13387223666,C3700000000018742669");
        list.add("1001805561,18660118563,C0000000000001497769");
        list.add("1001847651,15058282931,C3110000000035141933");
        list.add("1002056299,13100719136,C3040000000036128986");
        list.add("1002143831,18022312593,C0000000000000882824");
        list.add("1002233903,18845900970,C3830000000035595462");
        list.add("1002308731,18031627136,C3810000000010685777");
        list.add("1002398519,18115016889,C8530000000010370450");
        list.add("1002404001,15266022111,C0000000000006229801");
        list.add("1002433285,15369572222,C3110000000032861015");
        list.add("1002491033,15860682855,C8130000000016595093");
        list.add("1002582129,18181766603,C0000000000002148078");
        list.add("1002712923,15063937000,C1510000000069670920");
        list.add("1002730525,15979080884,C8190000000084076850");
        list.add("1002756129,15838387030,C3700000000017303617");
        list.add("1002756187,13990121405,C0000000000002148078");
        list.add("1002809683,13417715050,C0000000000006114507");
        list.add("1002962559,18159109088,C8230000000010312418");
        list.add("1003077609,17361725356,C1210000000058774214");
        list.add("1003114137,17709847176,C0000000000001829042");
        list.add("1003135691,18068069509,C0000000000006210681");
        list.add("1003142513,15256130513,C8470000000006903389");
        list.add("1003338761,15814100425,C3700000000042454226");
        list.add("1003401357,18223229688,C8600000000007174691");
        list.add("1003404109,17749660560,C8630000000019157288");
        list.add("1003412311,15339251409,C3460000000007713412");
        list.add("1003545749,17610609700,C1240000000080761923");
        list.add("1003552819,15689013861,C3040000000032666908");
        list.add("1003580043,18669345566,C8720000000019920199");
        list.add("1003617287,17696561314,C9880000000066895643");
        list.add("1003672701,13941193339,C8420000000068905996");
        list.add("1003765479,13801758648,C3700000000015744704");
        list.add("1003768545,18695141214,C3330000000018442931");
        list.add("1003821941,18052392806,C3680000000007872007");
        list.add("1003865839,17665060605,C1140000000064574031");
        list.add("1003909209,13367611311,C3110000000010263368");
        list.add("1003969651,15605362636,C3330000000048329603");
        list.add("1003987729,15566873601,C0000000000001686296");
        list.add("1004027831,13094729639,C8810000000038398258");
        list.add("1004143187,18586056686,C3040000000018367972");
        list.add("1004156157,17605972491,C3840000000014244280");
        list.add("1004164093,15392749923,C3330000000031537961");
        list.add("1004165911,18876176666,C9050000000036593798");
        list.add("1004381109,18883779219,C9780000000052237853");
        list.add("1004410805,13246817765,C8490000000040366284");
        list.add("1004538181,17636575200,C3040000000048675988");
        list.add("1004647571,18677205110,C9880000000052378108");
        list.add("1004667497,15609856483,C9210000000049294874");
        list.add("1004777939,18322118855,C8490000000013332990");
        list.add("1004787221,13394548172,C10250000000050430987");
        list.add("1004788737,17602311198,C0000000000003507374");
        list.add("1004802487,17351326756,C9710000000058502339");
        list.add("1004921761,17614056685,C8420000000025708927");
        list.add("1004928725,15872702760,C8730000000017882536");
        list.add("1004980551,17681905235,C3330000000077879825");
        list.add("1005038697,17604433308,C3110000000022929821");
        list.add("1005078945,13525198880,E510000000140039032");
        list.add("1005103551,18006337654,C1140000000071565713");
        list.add("1005136381,13639860099,C3110000000077237824");
        list.add("1005403653,16602802607,C1240000000086342097");
        list.add("1005489511,17151053468,C8210000000096713691");
        list.add("1005574941,17187152014,C1160000000056764946");
        list.add("1005651291,15524557082,C3330000000039469240");
        list.add("1005788957,15304480003,C3330000000015827466");
        list.add("1005817977,18568695098,C8810000000068299666");
        list.add("1005911103,18041161802,C3320000000006683824");
        list.add("1006332105,15307738755,C9350000000049326828");
        list.add("1006377467,13924041031,C1140000000064574031");
        list.add("1006378473,13709595534,C3040000000038766591");
        list.add("1006392259,18258501672,C8490000000052417871");
        list.add("1006392391,18375317515,C8490000000052417871");
        list.add("1006403277,15598448883,C3330000000078013481");
        list.add("1006451389,18175155253,C3120000000025005885");
        list.add("1006451601,18670357172,C3120000000025005885");
        list.add("1006460249,13976382880,C0000000000001848757");
        list.add("1006495339,17758136132,C3700000000032472806");
        list.add("1006503663,13685858079,C3110000000035141933");
        list.add("1006512607,13708357681,C9780000000052237853");
        list.add("1006518655,18277146481,C1250000000076333648");
        list.add("1006562107,18003609156,C3010000000094980317");
        list.add("1006566035,13009470179,C8420000000018011305");
        list.add("1006570387,15101252417,C3040000000040313819");
        list.add("1006574259,15055272173,C8480000000014594892");
        list.add("1006581903,13597500080,C3700000000018742669");
        list.add("1006593479,18199804672,E510000000025562973");
        list.add("1006622233,13142769415,C8810000000038398258");
        list.add("1006635755,13853092150,C8770000000031779814");
        list.add("1006653539,15524725568,C3330000000039469240");
        list.add("1006660903,13944828858,C0000000000005557667");
        list.add("1006716895,15140694762,C9210000000049294874");
        list.add("1006717999,18600408813,C3330000000025661179");
        list.add("1006803741,13903618986,C8620000000008208435");
        list.add("1007162043,18673422133,C1460000000067579663");
        list.add("1007172027,15616465445,C8250000000040225530");
        list.add("1007193809,18779133107,C3040000000096270467");
        list.add("1007239341,18913689958,E510000000140595967");
        list.add("1007538253,15645918414,C1460000000073924421");
        list.add("1007587117,17689941069,C3330000000077846506");
        list.add("1007621383,13815282115,E510000000140869032");
        list.add("1007674319,18660604309,C1000000000057928194");
        list.add("1007703253,15904013201,C0000000000005016468");
        list.add("1008003771,13305461455,C10220000000051309198");
        list.add("1008141883,18633839285,C0000000000003478038");
        list.add("1008164537,15859865360,C9620000000085724250");
        list.add("1008224785,18990568660,C8490000000041358350");
        list.add("1008309229,18663658237,C3520000000011524947");
        list.add("1008318541,15558040610,C9620000000079522906");
        list.add("1008345099,17678362713,C3110000000026282599");
        list.add("1008396419,13488770265,C3700000000032054143");
        list.add("1008403503,13804750411,C8420000000013014157");
        list.add("1008403861,18843155828,C3040000000026498779");
        list.add("1008427615,17684366777,C0000000000001154101");
        list.add("1008460617,18686682921,C8700000000083928247");
        list.add("1008491799,15764117765,C9680000000073623685");
        list.add("1008530615,18784050111,C8160000000097072502");
        list.add("1008869875,18651557070,E510000000140011930");
        list.add("1008910939,13603630203,C8620000000094424941");
        list.add("1009083353,18604453791,C0000000000001154101");
        list.add("1009086835,17786906756,C8490000000082793568");
        list.add("1009544897,17608164452,C8160000000097072502");
        list.add("1009624687,18909572025,C3330000000018442931");
        list.add("1009666313,18665836675,C8250000000036581872");
        list.add("1009740435,17711707080,C8250000000036581872");
        list.add("1009968397,13962366677,E510000000140609802");
        list.add("1010012165,15036109700,C3700000000017303617");
        list.add("1010084775,15160601506,C2360000000096521136");
        list.add("1010229391,15645640366,C3320000000014204014");
        list.add("1010229673,13261323289,C3320000000014204014");
        list.add("1010337767,15289124600,E006000000150177849");
        list.add("1010389807,18579118185,C3220000000013267370");
        list.add("1010891429,13898256270,E510000000026844528");
        list.add("1010914607,17306067127,C9620000000081765559");
        list.add("1010922231,18642363335,C8490000000021860714");
        list.add("1010954697,15926316207,C3040000000036128986");
        list.add("1011366067,15889748495,C1240000000080384733");
        list.add("1012093009,15767977241,C1240000000076364353");
        list.add("1012607315,18970071005,C9600000000051886281");
        list.add("1013595121,15109290016,C3460000000007713412");
        list.add("1013722833,18025252680,C3700000000042454226");
        list.add("1014225081,15659156615,C3330000000077846506");
        list.add("1014262305,18663395214,C1140000000071565713");
        list.add("1014431517,13941147992,C0000000000001829042");
        list.add("1014835583,15256976851,C8480000000014594892");
        list.add("1015016463,15948327849,C1070000000056369590");
        list.add("1015132241,15868936332,C3330000000077879825");
        list.add("1015317011,13599199570,C8130000000016595093");
        list.add("1015509883,15846622980,C8620000000008208435");
        list.add("1015848513,15213562203,C8600000000007174691");
        list.add("1016595313,18070929275,C3230000000069769210");
        list.add("1016896019,13355655251,C8650000000015657189");
        list.add("1016917627,18623008071,C0000000000003507374");
        list.add("1017332511,15721475861,C3360000000092706326");
        list.add("1018362339,13839808432,C3110000000077237824");
        list.add("1019173059,13632447417,C0000000000004615066");
        list.add("1020452033,13667793393,E510000000026163597");
        list.add("1022690113,13037207991,C3220000000013267370");
        list.add("1025184025,15943094629,C3330000000095336571");
        list.add("1025738317,13649422493,C9880000000052378108");
        list.add("1026044873,18242522466,C1240000000094640268");
        list.add("1027369271,13100793000,C8490000000025815296");
        list.add("1027867371,18840874148,C8850000000065086281");
        list.add("1028677203,15602637318,E277000000166360769");
        list.add("1029873019,13928838281,C8550000000086453527");
        list.add("1030402479,13721021281,E510000000140725820");
        list.add("1041592115,15931162085,C0000000000003478038");
        list.add("1046922057,15663429383,C0000000000004040554");
        list.add("1047197585,18673447072,C8630000000019157288");
        list.add("1050598423,17110238730,E098000000176637295");
        list.add("1052816547,13284599420,E970000000172698277");
        list.add("1054080515,17089504502,E118000000172630654");
        list.add("1054166441,13304899326,C1460000000073924421");
        list.add("1059849165,13256389929,C3110000000035483372");
        list.add("1063330237,18204228128,C3040000000079656746");
        list.add("1064828347,13263594990,E843000000182559819");
        list.add("1064958695,15312027685,C1240000000086293462");
        list.add("1068195419,17138584972,E381000000174173743");
        list.add("1068315145,17156328829,E098000000176637295");
        list.add("1068326465,17879354876,E006000000150177849");
        list.add("1068487963,17031840183,E277000000178970276");
        list.add("1069358105,13807664925,C0000000000001296638");
        list.add("1072710401,15065151830,C8720000000019920199");
        list.add("1074729311,15215452952,C9040000000026565524");
        list.add("1077822543,13053586685,C9040000000026565524");
        list.add("1078925599,15862612620,C3390000000006881942");
        list.add("1082734203,13966110527,C8470000000006903389");
        list.add("1104142415,13695712688,C3700000000032472806");
        list.add("1109841083,15963299652,C9620000000082252052");
        list.add("1109985615,13513446274,E502000000184438415");
        list.add("1109988825,17070283291,E277000000166360769");
        list.add("1110372043,18629521125,C3150000000020439767");
        usedMobiles.add("C1240000000086293462,18118991220,15312027685,1");
        usedMobiles.add("C8850000000065086281,18698719068,18840874148,1");
        usedMobiles.add("C1210000000058774214,17361725356,18751587672,1");
        usedMobiles.add("C1210000000058774214,17361725356,17361725356,41");
        usedMobiles.add("C0000000000004615066,13418046562,13632447417,6");
        usedMobiles.add("C0000000000004615066,13418046562,13418046562,10");
        usedMobiles.add("C1490000000054115189,18045419639,18045419639,1");
        usedMobiles.add("C1490000000054115189,18045419639,13803654043,3");
        usedMobiles.add("C8220000000081800951,18650396401,18650396401,1");
        usedMobiles.add("C8220000000081800951,18650396401,17170679471,1");
        usedMobiles.add("C9620000000082252052,17561726335,15963299652,1");
        usedMobiles.add("C9620000000082252052,17561726335,17561726335,2");
        usedMobiles.add("E510000000140616615,15117000000,15117000000,1");
        usedMobiles.add("E510000000140616615,15117000000,13061057910,22");
        usedMobiles.add("C3700000000032054143,13903218050,13488770265,2");
        usedMobiles.add("C3700000000032054143,13903218050,13903218050,4");
        usedMobiles.add("C8490000000037055763,13532655877,13416910018,1");
        usedMobiles.add("C8490000000037055763,13532655877,13416931690,2");
        usedMobiles.add("C8490000000021860714,18642363335,15842391115,3");
        usedMobiles.add("C8490000000021860714,18642363335,18642363335,25");
        usedMobiles.add("C3040000000078315301,15277031449,15296582449,1");
        usedMobiles.add("C3040000000078315301,15277031449,15277031449,31");
        usedMobiles.add("C3330000000015827466,15304480003,15304480003,6");
        usedMobiles.add("C3330000000015827466,15304480003,13843610003,8");
        usedMobiles.add("C3700000000075644897,15159180085,15159180085,1");
        usedMobiles.add("C3700000000075644897,15159180085,18650988993,6");
        usedMobiles.add("C9880000000066895643,17696561314,18568806337,6");
        usedMobiles.add("C9880000000066895643,17696561314,17696561314,12");
        usedMobiles.add("C10150000000050340496,13104314060,13314313276,1");
        usedMobiles.add("C10150000000050340496,13104314060,13104314060,6");
        usedMobiles.add("C9710000000058502339,17351326756,13962985103,1");
        usedMobiles.add("C9710000000058502339,17351326756,17351326756,12");
        usedMobiles.add("C8700000000083928247,15940889481,18686682921,1");
        usedMobiles.add("C8700000000083928247,15940889481,15940889481,22");
        usedMobiles.add("C3330000000031537961,15392749923,18908992388,1");
        usedMobiles.add("C3330000000031537961,15392749923,15392749923,16");
        usedMobiles.add("C8230000000037593136,19959886570,13959812077,1");
        usedMobiles.add("C8230000000037593136,19959886570,18146140396,2");
        usedMobiles.add("C8230000000037593136,19959886570,19959886570,32");
        usedMobiles.add("C9870000000077122586,18683862860,18683862860,6");
        usedMobiles.add("C9870000000077122586,18683862860,15883895381,19");
        usedMobiles.add("E160000000141515912,18357507538,13857507532,3");
        usedMobiles.add("C3040000000040313819,17693132893,15101252417,2");
        usedMobiles.add("C3040000000040313819,17693132893,17693132893,13");
        usedMobiles.add("E023000000171815426,17133320648,17125684435,1");
        usedMobiles.add("E023000000171815426,17133320648,15283863461,3");
        usedMobiles.add("C8420000000018011305,13009470179,15566869954,8");
        usedMobiles.add("C8420000000018011305,13009470179,13009470179,9");
        usedMobiles.add("C8770000000031779814,13665309158,13853092150,1");
        usedMobiles.add("C3040000000077638286,17086017467,13451478636,1");
        usedMobiles.add("C3040000000077638286,17086017467,17306408990,6");
        usedMobiles.add("C3040000000077638286,17086017467,13074609246,58");
        usedMobiles.add("C8550000000086453527,18588568333,13928838281,2");
        usedMobiles.add("C3330000000025661179,18500401547,18600408813,3");
        usedMobiles.add("C3330000000025661179,18500401547,18500401547,14");
        usedMobiles.add("C3810000000066570894,17136458036,18673270844,3");
        usedMobiles.add("C3810000000066570894,17136458036,17136458036,69");
        usedMobiles.add("C3040000000081234592,13601616905,15888214242,1");
        usedMobiles.add("C3040000000081234592,13601616905,13601616905,8");
        usedMobiles.add("C3110000000021268005,18191365925,15291368075,1");
        usedMobiles.add("C3110000000021268005,18191365925,18191365925,6");
        usedMobiles.add("E002000000149715972,17107341149,17107341149,2");
        usedMobiles.add("E002000000149715972,17107341149,13408660844,6");
        usedMobiles.add("E118000000172630654,17136098461,18482320469,3");
        usedMobiles.add("C0000000000004513787,18659220008,15959255211,1");
        usedMobiles.add("C0000000000004513787,18659220008,18659220008,7");
        usedMobiles.add("C3700000000049462167,15245234800,15245234800,1");
        usedMobiles.add("C3110000000018422580,18521051636,13564467364,1");
        usedMobiles.add("C3110000000018422580,18521051636,18521051636,5");
        usedMobiles.add("C0000000000005557667,17843176555,13944828858,1");
        usedMobiles.add("C0000000000005557667,17843176555,17843176555,4");
        usedMobiles.add("C8490000000013332990,18322118855,18322118855,3");
        usedMobiles.add("C8490000000013332990,18322118855,15822803356,11");
        usedMobiles.add("C3700000000084984799,17096429016,13257705716,20");
        usedMobiles.add("C3360000000092706326,18521795001,15721475861,1");
        usedMobiles.add("C3360000000092706326,18521795001,13127913893,2");
        usedMobiles.add("C3360000000092706326,18521795001,18521795001,3");
        usedMobiles.add("C3230000000069769210,18070929275,15977489275,1");
        usedMobiles.add("C3230000000069769210,18070929275,18070929275,3");
        usedMobiles.add("C3330000000029795927,18518183131,18518183131,2");
        usedMobiles.add("C3330000000029795927,18518183131,18601158831,11");
        usedMobiles.add("C3040000000045630373,15268356341,15268356341,1");
        usedMobiles.add("C3040000000045630373,15268356341,13456339015,19");
        usedMobiles.add("C0000000000000846038,18976444073,13647552435,23");
        usedMobiles.add("C1240000000086342097,16602802607,18050586258,15");
        usedMobiles.add("C1240000000086342097,16602802607,16602802607,190");
        usedMobiles.add("C8730000000017882536,15872702760,15695160242,4");
        usedMobiles.add("C8730000000017882536,15872702760,15872702760,16");
        usedMobiles.add("C0000000000006210681,18068069509,18068069509,2");
        usedMobiles.add("C0000000000006210681,18068069509,18962411139,8");
        usedMobiles.add("C9680000000073623685,17896389111,15764117765,1");
        usedMobiles.add("C9680000000073623685,17896389111,17896389111,17");
        usedMobiles.add("C0000000000001686296,15566873601,15566868907,1");
        usedMobiles.add("C0000000000001686296,15566873601,15566873601,12");
        usedMobiles.add("C8530000000010370450,18115016889,15283807699,2");
        usedMobiles.add("C8530000000010370450,18115016889,18115016889,3");
        usedMobiles.add("C9060000000041102861,18507501003,18688603960,1");
        usedMobiles.add("C9060000000041102861,18507501003,18507501003,16");
        usedMobiles.add("C3110000000010263368,13367611311,13377137007,4");
        usedMobiles.add("C3110000000010263368,13367611311,13367611311,10");
        usedMobiles.add("C10280000000054547881,18063053768,13856440106,6");
        usedMobiles.add("C10280000000054547881,18063053768,18063053768,21");
        usedMobiles.add("C3040000000020798344,17010241994,13123516986,4");
        usedMobiles.add("C9620000000084046812,15959686975,18159739007,2");
        usedMobiles.add("C3110000000026282599,17678362713,18843196868,2");
        usedMobiles.add("C3110000000026282599,17678362713,17678362713,9");
        usedMobiles.add("C2360000000096521136,17505982585,15160601506,5");
        usedMobiles.add("C3330000000048329603,15165367717,15165367717,1");
        usedMobiles.add("C3330000000048329603,15165367717,15605362636,9");
        usedMobiles.add("C1240000000080384733,17688894758,15889748495,2");
        usedMobiles.add("C1240000000080384733,17688894758,17688894758,16");
        usedMobiles.add("C0000000000004978875,15842690064,15842690064,2");
        usedMobiles.add("C0000000000004978875,15842690064,13664250881,7");
        usedMobiles.add("C8490000000040366284,13246817765,13113383041,5");
        usedMobiles.add("C8490000000040366284,13246817765,13246817765,20");
        usedMobiles.add("C0000000000006114507,13417715050,13667376227,3");
        usedMobiles.add("C0000000000006114507,13417715050,13417715050,7");
        usedMobiles.add("C3040000000041827970,15777324888,15777324888,2");
        usedMobiles.add("C3040000000041827970,15777324888,18644075056,2");
        usedMobiles.add("C0000000000006229801,13561039299,13561039299,1");
        usedMobiles.add("C0000000000006229801,13561039299,15266022111,3");
        usedMobiles.add("C0000000000004059306,15248159852,15248159852,2");
        usedMobiles.add("C0000000000004059306,15248159852,18847303535,30");
        usedMobiles.add("E510000000140595967,18550020600,18550020600,1");
        usedMobiles.add("E510000000140595967,18550020600,18913689958,7");
        usedMobiles.add("C3110000000032861015,15369572222,13313298180,2");
        usedMobiles.add("C3110000000032861015,15369572222,15369572222,17");
        usedMobiles.add("C1240000000080761923,17610609700,15940250488,6");
        usedMobiles.add("C1240000000080761923,17610609700,17610609700,7");
        usedMobiles.add("C3320000000006683824,18041161802,15114662915,1");
        usedMobiles.add("C3320000000006683824,18041161802,18041161802,16");
        usedMobiles.add("E381000000174173743,17138584972,17719498294,2");
        usedMobiles.add("E381000000174173743,17138584972,15282858241,4");
        usedMobiles.add("C3700000000015744704,13801758648,13801758648,1");
        usedMobiles.add("C3700000000015744704,13801758648,18516232518,2");
        usedMobiles.add("E843000000182559819,17167282889,13263594990,1");
        usedMobiles.add("E843000000182559819,17167282889,15032914996,2");
        usedMobiles.add("E843000000182559819,17167282889,17167282889,2");
        usedMobiles.add("C8650000000015657189,18815692717,13355655251,1");
        usedMobiles.add("C8650000000015657189,18815692717,18815692717,10");
        usedMobiles.add("E510000000025734996,17644027270,17644027270,1");
        usedMobiles.add("E510000000025734996,17644027270,17644023230,16");
        usedMobiles.add("C8490000000081849099,15756441167,15114042067,4");
        usedMobiles.add("C1280000000064626773,13913867226,18052066195,1");
        usedMobiles.add("E510000000140039032,18637783859,18637783859,1");
        usedMobiles.add("E510000000140039032,18637783859,13525198880,10");
        usedMobiles.add("E510000000025562973,17509076468,17509076468,2");
        usedMobiles.add("E510000000025562973,17509076468,18199804672,23");
        usedMobiles.add("C8490000000082793568,13876682656,17786906756,3");
        usedMobiles.add("C8490000000082793568,13876682656,13876682656,9");
        usedMobiles.add("E510000000026844528,15941936682,13898256270,1");
        usedMobiles.add("C3040000000035390360,13699196625,18530181885,13");
        usedMobiles.add("C0000000000001296638,17744810844,13807664925,1");
        usedMobiles.add("C0000000000001296638,17744810844,17744810844,3");
        usedMobiles.add("C3040000000026498779,18804314000,18804314000,5");
        usedMobiles.add("C3040000000026498779,18804314000,18843155828,7");
        usedMobiles.add("C8250000000040225530,18899733775,13250510150,1");
        usedMobiles.add("C8250000000040225530,18899733775,15616465445,3");
        usedMobiles.add("C3110000000022929821,17604433308,17604433308,1");
        usedMobiles.add("C3110000000022929821,17604433308,18742144498,2");
        usedMobiles.add("C3110000000022929821,17604433308,18304336896,12");
        usedMobiles.add("C3110000000022929821,17604433308,17602649983,23");
        usedMobiles.add("C1460000000067579663,17136450393,18673422133,12");
        usedMobiles.add("C1460000000067579663,17136450393,17136450393,53");
        usedMobiles.add("C3150000000020439767,18165309380,18629521125,2");
        usedMobiles.add("C3150000000020439767,18165309380,18165309380,12");
        usedMobiles.add("C8490000000025815296,13397229000,13397229000,22");
        usedMobiles.add("C3040000000079656746,17642198731,18204228128,4");
        usedMobiles.add("C3040000000079656746,17642198731,17642198731,5");
        usedMobiles.add("C0000000000001848757,13337649658,13337649658,1");
        usedMobiles.add("C0000000000001848757,13337649658,13976382880,7");
        usedMobiles.add("C9600000000051886281,18170882684,18970071005,1");
        usedMobiles.add("C9600000000051886281,18170882684,18170882684,12");
        usedMobiles.add("C3040000000038766591,18595141582,13709595534,1");
        usedMobiles.add("C3040000000038766591,18595141582,18595141582,24");
        usedMobiles.add("C1240000000076364353,17679103657,15767977241,2");
        usedMobiles.add("C1240000000076364353,17679103657,17679103657,10");
        usedMobiles.add("C0000000000005016468,18640473852,15904013201,11");
        usedMobiles.add("C3110000000035141933,15058282931,13685858079,7");
        usedMobiles.add("C8130000000016595093,15860682855,15860682855,2");
        usedMobiles.add("C8130000000016595093,15860682855,13599199570,18");
        usedMobiles.add("C0000000000002148078,18181766603,13990121405,3");
        usedMobiles.add("C0000000000002148078,18181766603,18181766603,21");
        usedMobiles.add("C3700000000017303617,15838387030,15036109700,2");
        usedMobiles.add("C3700000000017303617,15838387030,15838387030,4");
        usedMobiles.add("C8600000000007174691,18223229688,15213562203,1");
        usedMobiles.add("C8600000000007174691,18223229688,18223229688,3");
        usedMobiles.add("C8630000000019157288,17749660560,18673447072,3");
        usedMobiles.add("C8630000000019157288,17749660560,17749660560,16");
        usedMobiles.add("C3460000000007713412,15339251409,15109290016,1");
        usedMobiles.add("C3460000000007713412,15339251409,15339251409,4");
        usedMobiles.add("C1140000000064574031,17665060605,13924041031,5");
        usedMobiles.add("C1140000000064574031,17665060605,17665060605,64");
        usedMobiles.add("C8810000000038398258,13094729639,13142769415,76");
        usedMobiles.add("C9880000000052378108,18677205110,18677205110,7");
        usedMobiles.add("C9880000000052378108,18677205110,13649422493,20");
        usedMobiles.add("C3330000000077879825,17681905235,15868936332,6");
        usedMobiles.add("C3330000000077879825,17681905235,17681905235,15");
        usedMobiles.add("C1140000000071565713,18006337654,18663395214,1");
        usedMobiles.add("C3330000000039469240,15524557082,18642669355,1");
        usedMobiles.add("C3330000000039469240,15524557082,15524725568,3");
        usedMobiles.add("C8490000000052417871,18258501672,18375317515,3");
        usedMobiles.add("C8490000000052417871,18258501672,18258501672,7");
        usedMobiles.add("C3700000000032472806,17758136132,13695712688,1");
        usedMobiles.add("C3700000000032472806,17758136132,19975202560,2");
        usedMobiles.add("C3700000000032472806,17758136132,17706656281,5");
        usedMobiles.add("C3330000000077846506,17689941069,15659156615,2");
        usedMobiles.add("C3330000000077846506,17689941069,17689941069,6");
        usedMobiles.add("C0000000000003478038,18633839285,18633839285,1");
        usedMobiles.add("C0000000000003478038,18633839285,18931852725,1");
        usedMobiles.add("C0000000000003478038,18633839285,15630189285,2");
        usedMobiles.add("C0000000000003478038,18633839285,15931162085,12");
        usedMobiles.add("C0000000000001154101,17684366777,18604453791,1");
        usedMobiles.add("C0000000000001154101,17684366777,17684366777,13");
        usedMobiles.add("C8250000000036581872,17711707080,18229607667,2");
        usedMobiles.add("C8250000000036581872,17711707080,17711707080,35");
        usedMobiles.add("C3320000000014204014,13261323289,13261323289,2");
        usedMobiles.add("C3320000000014204014,13261323289,15645640366,4");
        usedMobiles.add("E510000000026258367,15078341585,13635193866,1");
        usedMobiles.add("C3040000000032666908,15689013861,18253385335,10");
        usedMobiles.add("C1510000000069670920,15063937000,13969676666,5");
        usedMobiles.add("C1510000000069670920,15063937000,15063937000,6");
        usedMobiles.add("C1490000000069787312,18302425256,15141716501,2");
        usedMobiles.add("C1490000000069787312,18302425256,18302425256,6");
        usedMobiles.add("C3200000000032450114,13591369551,13940939494,1");
        usedMobiles.add("C3200000000032450114,13591369551,13591369551,3");
        usedMobiles.add("E277000000178953584,13004779484,18408204539,2");
        usedMobiles.add("C3110000000035483372,18663817856,18663817856,1");
        usedMobiles.add("C3110000000035483372,18663817856,13256389929,1");
        usedMobiles.add("C9620000000085724250,13348432276,15859865360,1");
        usedMobiles.add("C9620000000085724250,13348432276,18350807262,4");
        usedMobiles.add("C0000000000004040554,15663429383,15663429383,4");
        usedMobiles.add("C0000000000004040554,15663429383,18686849590,28");
        usedMobiles.add("C3270000000007611455,13685832222,13567479797,1");
        usedMobiles.add("C3270000000007611455,13685832222,13685832222,22");
        usedMobiles.add("C9620000000074661493,18624399572,13998515572,1");
        usedMobiles.add("C9620000000074661493,18624399572,18624399572,6");
        usedMobiles.add("C9620000000074661493,18624399572,18504118752,12");
        usedMobiles.add("C3700000000093197746,17092067949,13185262256,3");
        usedMobiles.add("C0000000000004471595,15568828423,15568828423,3");
        usedMobiles.add("C0000000000004471595,15568828423,18686639092,8");
        usedMobiles.add("C8490000000041358350,18990568660,18990568660,8");
        usedMobiles.add("C8490000000041358350,18990568660,15208299396,9");
        usedMobiles.add("C8620000000094424941,13100815565,13603630203,5");
        usedMobiles.add("C3040000000037297335,18288680895,18669061208,1");
        usedMobiles.add("C3040000000037297335,18288680895,18288680895,18");
        usedMobiles.add("C0000000000001035982,18669855359,18669855359,2");
        usedMobiles.add("C0000000000001035982,18669855359,18766216053,8");
        usedMobiles.add("C9620000000082132119,17688816760,13532739442,5");
        usedMobiles.add("C10250000000050430987,13394548172,13512666166,1");
        usedMobiles.add("C10250000000050430987,13394548172,13394548172,1");
        usedMobiles.add("C1010000000065279228,13190153014,13190153014,15");
        usedMobiles.add("C1010000000065279228,13190153014,15641106153,105");
        usedMobiles.add("C8420000000025708927,17614056685,17614056685,6");
        usedMobiles.add("C8420000000025708927,17614056685,18347525588,23");
        usedMobiles.add("E277000000178970276,17031840183,18645272476,1");
        usedMobiles.add("E277000000178970276,17031840183,18402854588,3");
        usedMobiles.add("C0000000000001497769,18660118563,18653136563,1");
        usedMobiles.add("C0000000000001497769,18660118563,18660118563,2");
        usedMobiles.add("C3810000000075201006,17136450053,18670916873,3");
        usedMobiles.add("C3810000000075201006,17136450053,17136450053,54");
        usedMobiles.add("C3110000000045836198,18692467717,15673759990,9");
        usedMobiles.add("C3110000000045836198,18692467717,18692467717,9");
        usedMobiles.add("C3110000000029597694,13013087570,17755012421,1");
        usedMobiles.add("C3110000000029597694,13013087570,18019551953,1");
        usedMobiles.add("C3110000000029597694,13013087570,13013087570,2");
        usedMobiles.add("C3040000000048675988,17636575200,17636575200,1");
        usedMobiles.add("C3040000000048675988,17636575200,15003468706,4");
        usedMobiles.add("C3800000000009314226,17673050866,15574988987,2");
        usedMobiles.add("C3800000000009314226,17673050866,17673050866,30");
        usedMobiles.add("C3830000000035595462,18845900970,18845900970,1");
        usedMobiles.add("C3830000000035595462,18845900970,13836960602,13");
        usedMobiles.add("C1480000000067331618,19951571340,19951571340,1");
        usedMobiles.add("C1480000000067331618,19951571340,16651157170,2");
        usedMobiles.add("C1480000000067331618,19951571340,18675570433,2");
        usedMobiles.add("C1480000000067331618,19951571340,16604326100,2");
        usedMobiles.add("C1480000000067331618,19951571340,18625116640,22");
        usedMobiles.add("C1480000000067331618,19951571340,13962627170,26");
        usedMobiles.add("E502000000184438415,13513446274,13029904193,2");
        usedMobiles.add("E502000000184438415,13513446274,15232763479,2");
        usedMobiles.add("C9620000000081765559,15260100870,17306067127,5");
        usedMobiles.add("C3840000000014244280,17605972491,18659776020,6");
        usedMobiles.add("C3840000000014244280,17605972491,17605972491,65");
        usedMobiles.add("E502000000182271485,17077631329,13020956494,3");
        usedMobiles.add("C3290000000006635818,17784670001,17784670001,5");
        usedMobiles.add("C3290000000006635818,17784670001,13617541845,8");
        usedMobiles.add("C3040000000018367972,18586056686,18586056686,1");
        usedMobiles.add("C3040000000018367972,18586056686,13238402691,4");
        usedMobiles.add("C9300000000078807603,17773225344,18673248769,2");
        usedMobiles.add("C3700000000081806155,18077209393,18077209393,1");
        usedMobiles.add("C3700000000081806155,18077209393,13978042200,2");
        usedMobiles.add("C3330000000078013481,15661556060,15598448883,2");
        usedMobiles.add("C3330000000078013481,15661556060,15661556060,6");
        usedMobiles.add("C8230000000010312418,18159109088,18160988816,1");
        usedMobiles.add("C8230000000010312418,18159109088,18159109088,17");
        usedMobiles.add("C8490000000081701839,15627601680,15627601680,30");
        usedMobiles.add("C9350000000049326828,15307738755,15307738755,1");
        usedMobiles.add("C9350000000049326828,15307738755,18378301124,2");
        usedMobiles.add("C1240000000094640268,13284151501,13284151501,2");
        usedMobiles.add("C1240000000094640268,13284151501,18242522466,5");
        usedMobiles.add("E510000000025618571,18654619162,18661387516,9");
        usedMobiles.add("C0000000000000882824,18198912464,18022312593,13");
        usedMobiles.add("C8490000000020868678,15150651905,15150651905,4");
        usedMobiles.add("C8490000000020868678,15150651905,15052181185,5");
        usedMobiles.add("C8420000000068905996,13941193339,18698660661,2");
        usedMobiles.add("C8420000000068905996,13941193339,13941193339,8");
        usedMobiles.add("E510000000140560695,18212318910,18212318910,6");
        usedMobiles.add("E510000000140560695,18212318910,18586526921,7");
        usedMobiles.add("C0000000000005828278,15942481852,15942481852,6");
        usedMobiles.add("C0000000000005828278,15942481852,15998579153,24");
        usedMobiles.add("C8810000000068299666,17739625515,17739625515,7");
        usedMobiles.add("C8810000000068299666,17739625515,18568695098,34");
        usedMobiles.add("C8810000000068299666,17739625515,17797753826,51");
        usedMobiles.add("C8750000000038821251,18949661236,18205541257,3");
        usedMobiles.add("C8750000000038821251,18949661236,18949661236,18");
        usedMobiles.add("C9050000000036593798,18876176666,18559705789,1");
        usedMobiles.add("C9050000000036593798,18876176666,18876176666,1");
        usedMobiles.add("C3810000000010685777,18031627136,13785686749,1");
        usedMobiles.add("C8490000000077004798,13091931748,13586972812,308");
        usedMobiles.add("C8700000000067727927,15668619084,13942047462,7");
        usedMobiles.add("C8700000000067727927,15668619084,15668619084,9");
        usedMobiles.add("C3840000000008045034,17010241984,18610609969,71");
        usedMobiles.add("E510000000140011930,18795477070,18651557070,13");
        usedMobiles.add("E510000000140011930,18795477070,18795477070,32");
        usedMobiles.add("C8420000000013014157,13804750411,15104751352,1");
        usedMobiles.add("C8420000000013014157,13804750411,13804750411,2");
        usedMobiles.add("E943000000026243183,18996355503,18996355503,4");
        usedMobiles.add("E943000000026243183,18996355503,17382305360,84");
        usedMobiles.add("C2360000000096005892,13950105671,13950105671,1");
        usedMobiles.add("C2360000000096005892,13950105671,17605074047,7");
        usedMobiles.add("C3520000000011524947,18663658237,18663658237,1");
        usedMobiles.add("C3520000000011524947,18663658237,18678043422,2");
        usedMobiles.add("C10220000000051309198,13205470333,13305461455,1");
        usedMobiles.add("C10220000000051309198,13205470333,13205470333,10");
        usedMobiles.add("E510000000140725820,13956021471,13721021281,1");
        usedMobiles.add("C1160000000056764946,17187152014,15961897358,2");
        usedMobiles.add("E510000000140471213,13081772652,13841960158,3");
        usedMobiles.add("C3680000000007872007,18052392806,18052392806,12");
        usedMobiles.add("C3680000000007872007,18052392806,13801406035,18");
        usedMobiles.add("E970000000172698277,17077485218,13284599420,1");
        usedMobiles.add("E970000000172698277,17077485218,15883689438,2");
        usedMobiles.add("C3700000000023419974,15817624544,15678720454,2");
        usedMobiles.add("C8190000000084076850,13979104626,13979104626,2");
        usedMobiles.add("C8190000000084076850,13979104626,15979080884,31");
        usedMobiles.add("E510000000026163597,15607792350,13667793393,2");
        usedMobiles.add("E510000000026163597,15607792350,15607792350,3");
        usedMobiles.add("C3040000000096270467,18579111173,18579111173,3");
        usedMobiles.add("C3040000000096270467,18579111173,18779133107,16");
        usedMobiles.add("E510000000140869032,13915636352,13915636352,2");
        usedMobiles.add("E510000000140869032,13915636352,13815282115,11");
        usedMobiles.add("C3330000000095336571,15948374366,15943094629,3");
        usedMobiles.add("C3330000000095336571,15948374366,15948374366,5");
        usedMobiles.add("E510000000140609802,18015636464,18015636464,1");
        usedMobiles.add("E510000000140609802,18015636464,13962366677,5");
        usedMobiles.add("C3110000000082468870,18030088800,18030088800,1");
        usedMobiles.add("C3010000000094980317,15663777859,15663777859,2");
        usedMobiles.add("C3010000000094980317,15663777859,18003609156,16");
        usedMobiles.add("C8210000000096713691,17151053468,13646152012,32");
        usedMobiles.add("C1000000000057928194,18853605128,18853605128,1");
        usedMobiles.add("C1000000000057928194,18853605128,18660604309,6");
        usedMobiles.add("C9620000000079522906,17369538079,15558040610,1");
        usedMobiles.add("C9620000000079522906,17369538079,17369538079,1");
        usedMobiles.add("C1070000000056369590,17504409480,15948327849,1");
        usedMobiles.add("C1070000000056369590,17504409480,17504409480,2");
        usedMobiles.add("C1250000000076333648,18275730024,18275730024,4");
        usedMobiles.add("C1250000000076333648,18275730024,18277146481,24");
        usedMobiles.add("C3390000000006881942,18013171482,15862612620,11");
        usedMobiles.add("C3390000000006881942,18013171482,18013171482,30");
        usedMobiles.add("C3700000000018742669,13387223666,13597500080,7");
        usedMobiles.add("C3700000000018742669,13387223666,13387223666,20");
        usedMobiles.add("C3040000000036128986,13100719136,15926316207,1");
        usedMobiles.add("C0000000000001829042,17709847176,17709847176,2");
        usedMobiles.add("C0000000000001829042,17709847176,13941147992,9");
        usedMobiles.add("C8470000000006903389,15256130513,18056136356,3");
        usedMobiles.add("C8470000000006903389,15256130513,18056135613,20");
        usedMobiles.add("C8470000000006903389,15256130513,13966110527,21");
        usedMobiles.add("C3700000000042454226,15814100425,18025252680,1");
        usedMobiles.add("C3700000000042454226,15814100425,15814100425,1");
        usedMobiles.add("C8720000000019920199,18669345566,18669345566,19");
        usedMobiles.add("C3330000000018442931,18695141214,18909572025,9");
        usedMobiles.add("C9780000000052237853,18883779219,13708357681,12");
        usedMobiles.add("C9210000000049294874,15609856483,15140694762,16");
        usedMobiles.add("C0000000000003507374,17602311198,17602311198,5");
        usedMobiles.add("C0000000000003507374,17602311198,18623008071,5");
        usedMobiles.add("C3110000000077237824,13639860099,13839808432,1");
        usedMobiles.add("C3110000000077237824,13639860099,13639860099,10");
        usedMobiles.add("C3120000000025005885,18175155253,18670357172,4");
        usedMobiles.add("C3120000000025005885,18175155253,18175155253,55");
        usedMobiles.add("C8480000000014594892,15256976851,15256976851,1");
        usedMobiles.add("C8480000000014594892,15256976851,15055272173,15");
        usedMobiles.add("C8620000000008208435,15846622980,15846622980,4");
        usedMobiles.add("C1460000000073924421,13304899326,15645918414,1");
        usedMobiles.add("C1460000000073924421,13304899326,13304899326,10");
        usedMobiles.add("C8160000000097072502,17608164452,18784050111,1");
        usedMobiles.add("C8160000000097072502,17608164452,15655105540,1");
        usedMobiles.add("C8160000000097072502,17608164452,17608164452,12");
        usedMobiles.add("E006000000150177849,17879354876,15289124600,1");
        usedMobiles.add("E006000000150177849,17879354876,15828419136,7");
        usedMobiles.add("C3220000000013267370,13037207991,18579118185,2");
        usedMobiles.add("C3220000000013267370,13037207991,18379186526,2");
        usedMobiles.add("E277000000166360769,17070283291,17861582432,1");
        usedMobiles.add("E277000000166360769,17070283291,15602637318,1");
        usedMobiles.add("E277000000166360769,17070283291,18780050493,5");
        usedMobiles.add("E098000000176637295,17156328829,18482366819,6");
        usedMobiles.add("C9040000000026565524,13053586685,15215452952,1");
        usedMobiles.add("C9040000000026565524,13053586685,13053586685,1");
    }



    private static class A {
        private Long id;
        private String member;
        private String mobile;
        private String usedMobiles;
        private int shard = 0;
        private int shardCMC = 0;
        private int shardMobile = 0;

        public String getMobile() {
            return mobile;
        }

        public int getShardCMC() {
            return shardCMC;
        }

        public String getUsedMobiles() {
            return usedMobiles;
        }

        public void setUsedMobiles(String usedMobiles) {
            this.usedMobiles = usedMobiles;
        }

        public void setShardCMC(int shardCMC) {
            this.shardCMC = shardCMC;
        }

        public void setMobile(String mobile) {
            this.mobile = mobile;
            this.shardMobile = Math.abs(mobile.hashCode())%32 + 1;
        }

        public int getShardMobile() {
            return shardMobile;
        }

        public int getShard() {
            return shard;
        }

        public Long getId() {
            return id;
        }

        public void setId(Long id) {
            this.id = id;
            this.shard = (int)(id.longValue()%32 + 1);
        }

        public String getMember() {
            return member;
        }

        public void setMember(String member) {
            this.member = member;
            this.shardCMC = Math.abs(member.hashCode())%32 + 1;
        }
    }
}
